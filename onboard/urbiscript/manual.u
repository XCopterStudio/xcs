load("init_onboard.u");

/*
 * Static parameters
 */
//var xciVersion = "xci_dodo";
var xciVersion = "xci_parrot";

/*
 * Dataflow graph
 */

/*
 * Initialize nodes
 */
var xci = XXci.new(xciVersion);

var logname = Date.now().asString().replace(" ", "_");
var logger = XDatalogger.new("logs/" + logname + ".txt");

/*
 * Connect nodes
 */

/* Register to logger */
if(xci.hasSlot("rotation")) logger.registerData("rotation","ROTATION","xcs::EulerianVector",xci.&rotation);
if(xci.hasSlot("velocity")) logger.registerData("velocity","VELOCITY","xcs::CartesianVector",xci.&velocity);
if(xci.hasSlot("altitude")) logger.registerData("altitude","ALTITUDE","double",xci.&altitude);
if(xci.hasSlot("altitudeAll")) logger.registerData("altitudeAll","ALTITUDE_ALL","xcs::CartesianVector",xci.&altitudeAll);
if(xci.hasSlot("altitudeV")) logger.registerData("altitudeV","ALTITUDE_V","double",xci.&altitudeV);
if(xci.hasSlot("acceleration")) logger.registerData("acceleration","ACCELERATION","xcs::CartesianVector",xci.&acceleration);
if(xci.hasSlot("gyro")) logger.registerData("gyro","GYRO_RAW","xcs::CartesianVector",xci.&gyro);
if(xci.hasSlot("magneto")) logger.registerData("magneto","MAGNETO_RAW","xcs::CartesianVector",xci.&magneto);
if(xci.hasSlot("internalTimeImu")) logger.registerData("internalTimeImu","TIME_LOC","double",xci.&internalTimeImu);
if(xci.hasSlot("internalTimeVideo")) logger.registerData("internalTimeVideo","TIME_LOC","double",xci.&internalTimeVideo);

if(xci.hasSlot("video")) logger.registerVideo(640, 360, "video","CAMERA","xcs::BitmapType",xci.&video);

var Global.fpr;
function fprSetter(locFpr) {
    echo("SETTER");
    Global.fpr = locFpr;
}|;
serverConnect("127.0.0.1", 1234, xci, fprSetter, xciVersion),; // beware the comma
sleep(2s);
var fpr = Global.fpr;
var Global.fc;

logger.registerData("flyControl","FLY_CONTROL","xcs::FlyControl",Global.&fc);//xci.&flyControl);
logger.registerData("roll","ROLL","double",fpr.&roll);
logger.registerData("pitch","PITCH","double",fpr.&pitch);
logger.registerData("yaw","YAW","double",fpr.&yaw);
logger.registerData("gaz","GAZ","double",fpr.&gaz);

//logger.registerData("command","COMMAND","std::string",fpr.&command);

function demo(xci, r, p, y, g, duration, n) {
    var fc = FlyControl.new();    
    fc.roll = r;
    fc.pitch = p;
    fc.yaw = y;
    fc.gaz = g;
    
    var fc1 = FlyControl.new();    
    fc1.roll = -r;
    fc1.pitch = -p;
    fc1.yaw = -y;
    fc1.gaz = -g;
    
    var fc0 = FlyControl.new();    
    fc0.roll = 0;
    fc0.pitch = 0;
    fc0.yaw = 0;
    fc0.gaz = 0;
    
    var fcUp = FlyControl.new();    
    fcUp.roll = 0;
    fcUp.pitch = 0;
    fcUp.yaw = 0;
    fcUp.gaz = 0.3;
    xci.flyControl = (Global.fc = fcUp);
    sleep(1s);
    xci.flyControl = (Global.fc = fc0);
    sleep(1s);
    
    for (var i = 0; i < n; i += 1) {
        echo("Cycle no. " + i);
        xci.flyControl = (Global.fc = fc);
        sleep(duration);
        xci.flyControl = (Global.fc = fc0);
        sleep(duration);
        xci.flyControl = (Global.fc = fc1);
        sleep(duration);
        xci.flyControl = (Global.fc = fc0);
        sleep(duration);
        echo("Cycle no. " + i + " finished");
    };

    
    echo("Finished");
}|;

function ptam(xci, left, leftDuration, forward, forwardDuration) {
    var fc0 = FlyControl.new();    
    fc0.roll = 0;
    fc0.pitch = 0;
    fc0.yaw = 0;
    fc0.gaz = 0;
    
    // a bit up
    var fcUp = FlyControl.new();    
    fcUp.roll = 0;
    fcUp.pitch = 0;
    fcUp.yaw = 0;
    fcUp.gaz = 0.3;
    xci.flyControl = (Global.fc = fcUp);
    sleep(1s);
    xci.flyControl = (Global.fc = fc0);
    sleep(1s);
    
    echo("Risen");
    
    // a bit right
    var fcLeft = FlyControl.new();    
    fcLeft.roll = left;
    fcLeft.pitch = 0;
    fcLeft.yaw = 0;
    fcLeft.gaz = 0;
    xci.flyControl = (Global.fc = fcLeft);
    sleep(leftDuration);
    xci.flyControl = (Global.fc = fc0);
    sleep(1s);
    
    echo("Righted");
    
    // a bit forward 
    var fcForw = FlyControl.new();    
    fcForw.roll = 0;
    fcForw.pitch = forward;
    fcForw.yaw = 0;
    fcForw.gaz = 0;
    xci.flyControl = (Global.fc = fcForw);
    sleep(forwardDuration);
    xci.flyControl = (Global.fc = fc0);
    sleep(1s);
    
    echo("Finished");
}|;

/*
 * Start dataflow
 */

xci.xciInit();

/*
 * After start configuration
 */
if(xciVersion == "xci_dodo") {
    //xci.setConfiguration("video:timestamps", "1");
    xci.setConfiguration("video:filename", "tmp/video.mp4");
    //xci.setConfiguration("video:filename", "logs/2014-03-27_12:08:48.152538.avi");
    
    xci.command = "Load";
    xci.command = "Play";
} else if(xciVersion == "xci_parrot") {
    sleep(1s);
    xci.setConfiguration("video:video_channel", "2"); // 1-bottom, 2-front
};

logger.start();
echo("STARTED");
