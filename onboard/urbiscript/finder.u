ULineFinder.print = function () {

    echo("blurRange          : %s " % this.blurRange +
         "# Has to be ODD number.");
    echo("hsvValueRange      : %s " % this.hsvValueRange);
    echo("cannyT1            : %s " % this.cannyT1);
    echo("cannyT2            : %s " % this.cannyT2);
    echo("cannyApertureSize  : %s " % this.blurRange);
    echo("cannyL2Gradient    : %s " % this.cannyL2Gradient);
    echo("houghRho           : %s " % this.houghRho +
         "# Higher the value, less straight line are to be detected (Distance resolution of the accumulator in pixels).");
    echo("houghTheta         : %s " % this.houghTheta +
         "# Angle resolution of the accumulator in radians");
    echo("houghT             : %s " % this.houghT);
    echo("houghMinLength     : %s " % this.houghMinLength +
         "# Minimum length of line in pixels");
    echo("houghMaxGap        : %s " % this.houghMaxGap +
         "# Maximum allowed gap between points on the same line to link them");

}|;

var xci = XXci.new("xci_dodo");
//var xci = XXci.new("xci_parrot");
var f = ULineFinder.new();
xci.&video >> f.&video;

xci.xciInit();
xci.setConfiguration("video:filename", "video.mp4");
xci.setConfiguration("video:fps", "50");
//xci.setConfiguration("video:filename", "/tmp/video.xcs");
xci.doCommand("Load");
xci.doCommand("Play");


// Default values for image processing
f.hsvValueRange = 10; //20;
f.houghRho = 1;

//var ali = Aligner.new(xci, f);
// Use adjustYaw and adjustRoll function with ',' for parallel jobs.
//ali.adjustYaw(),
//ali.adjustRoll(),


