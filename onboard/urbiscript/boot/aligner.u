class Aligner{

    var xci;
    var finder;
    var rollPidParam;
    var yawPidParam;
    var pitchPidParam;
    var gazPidParam;
    var tyaw = Tag.new("tyaw");
    var troll = Tag.new("troll"); 
    var tpitch = Tag.new("tpitch"); 
    var tgaz = Tag.new("tgaz"); 
    var gazAltitude = 1.5;

    function init(xci, finder, rollPidParam, yawPidParam, pitchPidParam, gazPidParam) {
        this.xci = xci;
        this.finder = finder;
        this.rollPidParam = rollPidParam;
        this.yawPidParam = yawPidParam;
        this.pitchPidParam = pitchPidParam;
        this.gazPidParam = gazPidParam;
    };

    function pidLoop(pidParams, value){
        var correctedValue = value + pidParams.lastDerivation * pidParams.timeDelay;
        
        pidParams.sumI += correctedValue;
        var derivation = correctedValue - pidParams.lastValue;
        pidParams.lastValue = correctedValue;
        pidParams.lastDerivation = derivation;

        return pidParams.p*correctedValue + pidParams.i*pidParams.sumI + pidParams.d*derivation; 
    };

    function adjustRoll(){
        this.troll: every(500ms){ 
            var distance = finder.distance;
            var roll = Global.crop(pidLoop(rollPidParam,distance), 1);
            echo("roll: " + roll);
            xci.roll = roll; 
            sleep(50ms);
            xci.roll = 0;
        },
    };

    function adjustYaw(){
        this.tyaw: every(100ms){
            var deviation = finder.deviation;
            var yaw = Global.crop(pidLoop(yawPidParam,deviation), 1);
            echo("yaw: " + yaw);
            xci.yaw = yaw; 
        },
    };

    function adjustPitch(){
        this.tpitch: every(100ms){
            var deviation = finder.deviation;
            var distance = finder.distance;
            echo("deviation/distance: " + deviation + "/" + distance);
            if(deviation < pitchPidParam.p && distance < pitchPidParam.i) {
                xci.pitch = Global.crop(pitchPidParam.d, 1);
                echo("pitch: " + pitchPidParam.d);
           }
           else {
                xci.pitch = 0; 
           };
        },
    };

    function adjustGaz(){
        this.tgaz: every(100ms){
            var altDif = gazAltitude - xci.altitude;
            var gaz = Global.crop(pidLoop(gazPidParam, altDif), 1);
            echo("gaz: " + gaz);
            xci.gaz = gaz; 
        },
    };
}|;
