class Adapter {
    var socket_;
    var output;

    function init() {
        output = Object.clone(); // needs to be assigned for the output->changed? to work
        var this.connected = false; // alternative for Object.clone() above with initialization
    };

    function start(server, port) {
        socket_ = Socket.new();
        at (socket_.connected?) {
            XCS_LOG_INFO("Connected to server %s:%s." % [server, port]);
            this.connected = true;
        };
        at (socket_.disconnected?) {
            XCS_LOG_WARN("Disconnected from server.");
            this.connected = false;
        };
        at (socket_.error?(var message)) {
            XCS_LOG_ERROR(message);
        };
        var receiveMtx = Mutex.new();
        at (socket_.received?(var data)) receiveMtx: {
            output = data;
        };

        socket_.connect(server, port);
    };

    function send(data) {
        assert(socket_ != nil);
        socket_.write(data);
    };
}|;
