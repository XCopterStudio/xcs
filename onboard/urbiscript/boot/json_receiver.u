class JsonReceiver {
    var receivers = Dictionary.new();
    var messageBuffer;

    function init(adapter, json) { // parseJson as arg, lookup is wierd in this case (TODO package/import? or Global)
        messageBuffer = "";
        
        at(adapter.output->changed?) {
            // tryDecode and messageBuffer handles the case when too big message is comming and is cut to more parts
            /* This handles the case when more JSON objects are present in the buffer */
            var messageArray = (messageBuffer + adapter.output).replace("}\n{", "},{");

            if(json.tryDecode(messageArray)) {
                messageBuffer = json.outRest;
                var rawMessages = json.outJson;

                for(var rawData: rawMessages) {
                    var type = rawData["type"];
                    var data = rawData["data"];
                    if (receivers.has(type)) {
                        receivers[type].receive(data);
                    } else {
                        XCS_LOG_WARN("Unhandled message from Server of type: " + rawData["type"]);
                    };
                };
            } else {
                messageBuffer = messageArray;
            };

            if(messageBuffer != "") {
                XCS_LOG_INFO("Save massage from server to buffer.");
            };
        };
    };

    function addReceiver(dataType, receiver) {
        receivers[dataType] = receiver;
    };
    
    function removeReceiver(dataType) {
        receivers.erase(dataType);
    };
}|;
