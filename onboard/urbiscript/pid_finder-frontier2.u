load("init_onboard.u");

/*
 * Static parameters
 */
var rollPidParam = PidParams.new(0.4, 0, 0);
var yawPidParam = PidParams.new(0.5, 0, 0);
var pitchPidParam = PidParams.new(0.1, 0.1, -0.02);
var gazPidParam = PidParams.new(0.5, 0, 0);
 
//var xciVersion = "xci_dodo";
var xciVersion = "xci_parrot";

/*
 * Dataflow graph
 */

/*
 * Initialize nodes
 */
var xci = XXci.new(xciVersion);

var f = ULineFinder.new();
f.cameraParam = 0.73;

var d = ULineDrawer.new();
d.cameraParam = f.cameraParam;
f.setLineDrawer(d);

var k = ULineKeeper.new();
k.setLineDrawer(d);

var s = LineSmoother.new(f);

var m = LineMaster.new(f, k, s);


var lineProvider = m;

var a = Frontier2Aligner.new(xci, lineProvider, rollPidParam, yawPidParam, pitchPidParam, gazPidParam);

var logname = Date.now().asString().replace(" ", "_");
var logger = Datalogger.new("logs/" + logname + ".txt");

/*
 * Connect nodes
 */
xci.&video >> f.&video;
xci.&theta >> f.&theta;
xci.&phi >> f.&phi;

xci.&video >> d.&video;
xci.&theta >> d.&theta;
xci.&phi >> d.&phi;

xci.&velocityX >> k.&vx;
xci.&velocityY >> k.&vy;
xci.&altitude >> k.&altitude;
xci.&psi >> k.&psi;

    logger.registerData("rotation","ROTATION","EulerianVectorChronologic",xci.&rotation);
    logger.registerData("velocity","VELOCITY","CartesianVectorChronologic",xci.&velocity);
    logger.registerData("altitude","altitude","double",xci.&altitude);    
    logger.registerData("battery","battery","double",xci.&battery);    
    
//    logger.registerData("roll","roll","double",a.&roll);    
//    logger.registerData("pitch","pitch","double",a.&pitch);    
//    logger.registerData("yaw","yaw","double",a.&yaw);    
//    logger.registerData("gaz","gaz","double",a.&gaz);    
//    
//    logger.registerData("rollE","rollE","double",a.&rollE);    
//    logger.registerData("pitchE","pitchE","double",a.&pitchE);    
//    logger.registerData("yawE","yawE","double",a.&yawE);    
//    logger.registerData("gazE","gazE","double",a.&gazE);    

    logger.registerVideo("logs/" + logname + ".avi", 640, 360, "video","video","video",xci.&video);

    //logger.registerData("command","command","string",xci.&command);

// Default values for image processing (not set in Tcl GUI)
f.autoHsvValueRangeEnabled = true;

/*
 * Start dataflow
 */
serverConnect("127.0.0.1", 1234, xci, xciVersion),; // beware the comma

xci.xciInit();
m.start(),; // would block

/*
 * After start configuration
 */
if(xciVersion == "xci_dodo") {
    //xci.setConfiguration("video:timestamps", "1");
    xci.setConfiguration("video:filename", "tmp/video.mp4");
    xci.setConfiguration("video:filename", "logs/2014-03-27_12:08:48.152538.avi");
    
    xci.doCommand("Load");
    xci.doCommand("Play");
} else if(xciVersion == "xci_parrot") {
    sleep(1s);
    xci.setConfiguration("video:video_channel", "1");
};

/*
 * Automation
 */



// draw the main directing line
every(250ms) {
    d.drawFullLine(lineProvider.distance, lineProvider.deviation, 2, 3, true); 
},;

sleep(4s); k.reset(0, 0);
echo("STARTED");
