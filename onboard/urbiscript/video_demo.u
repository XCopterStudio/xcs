/*
 * Dataflow graph
 */

// connect to onboard
var adapter = Adapter.new();
//adapter.start("192.168.0.99", 1234);
adapter.start("127.0.0.1", 1234);

// create graph nodes
var xciVersion = "xci_dodo";
//var xciVersion = "xci_parrot";
var xci = XXci.new(xciVersion);
var semanticSender = SemanticSender.new(adapter, [
    "altitude" => "altitude",
    "phi" => "phi",
    "psi" => "psi",
    "theta" => "theta",
    "alive" => "alive",
], UJson);

var flyParamReceiver = SemanticReceiver.new(adapter, [
    "roll" => "roll",
    "pitch" => "pitch",
    "yaw" => "yaw",
    "gaz" => "gaz",
    "command" => "command"
], UJson);

var flashSender = FlashSender.new(adapter, UJson);
var f = ULineFinder.new();

flashSender.send("Created graph nodes.");

// connect graph nodes
if(xciVersion == "xci_parrot") {
    xci.&altitude >> semanticSender.&altitude;
    xci.&phi >> semanticSender.&phi;
    xci.&psi >> semanticSender.&psi;
    xci.&theta >> semanticSender.&theta;
};
if(xciVersion == "xci_dodo") {
    xci.&alive >> semanticSender.&alive;
};

flyParamReceiver.&roll >> xci.&roll;
flyParamReceiver.&pitch >> xci.&pitch;
flyParamReceiver.&yaw >> xci.&yaw;
flyParamReceiver.&gaz >> xci.&gaz;
flyParamReceiver.&command >> xci.&command;

xci.&video >> f.&video;

flashSender.send("Connected graph nodes.");

xci.xciInit();
// special command of Dodo
xci.setConfiguration("video:filename", "/home/michal/school/swproj/media/MOV_0262.mp4");
xci.setConfiguration("video:font", "/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf");
xci.doCommand("Load");
xci.doCommand("Play");

var ali = Aligner.new(xci, f);



